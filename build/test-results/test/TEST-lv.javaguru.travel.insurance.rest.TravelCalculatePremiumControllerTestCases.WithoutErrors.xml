<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="lv.javaguru.travel.insurance.rest.TravelCalculatePremiumControllerTestCases.WithoutErrors" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-04-04T19:32:47" hostname="WIN-6V3MTR2VJA7" time="0.27">
  <properties/>
  <testcase name="doTest()" classname="lv.javaguru.travel.insurance.rest.TravelCalculatePremiumControllerTestCases.WithoutErrors" time="0.27"/>
  <system-out><![CDATA[2024-04-04 22:32:47,146 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [lv.javaguru.travel.insurance.rest.TravelCalculatePremiumControllerTestCases.WithoutErrors], using SpringBootContextLoader
2024-04-04 22:32:47,146 [Test worker] INFO  o.s.t.c.s.AbstractContextLoader - Could not detect default resource locations for test class [lv.javaguru.travel.insurance.rest.TravelCalculatePremiumControllerTestCases.WithoutErrors]: no resource found for suffixes {-context.xml, Context.groovy}.
2024-04-04 22:32:47,146 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [lv.javaguru.travel.insurance.rest.TravelCalculatePremiumControllerTestCases.WithoutErrors]: WithoutErrors does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-04-04 22:32:47,146 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration lv.javaguru.travel.insurance.InsuranceApplication for test class lv.javaguru.travel.insurance.rest.TravelCalculatePremiumControllerTestCases.WithoutErrors
2024-04-04 22:32:47,146 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2024-04-04 22:32:47,146 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@23317e8a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@520c235f, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3426d8e2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@675c1335, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4f31e47a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7c142018, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7ef706b0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@793577e0, org.springframework.test.context.event.EventPublishingTestExecutionListener@39e75e88, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@642ebd4c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@222af5ff, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@70721c2d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@73e21fb5, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@62371858, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@17478cec]
2024-04-04 22:32:47,182 [Test worker] INFO  l.j.t.i.r.l.TravelCalculatePremiumRequestLogger - REQUEST: {"agreementDateFrom":"2024-05-25","agreementDateTo":"2024-05-29","country":"SPAIN","personFirstName":"Vasja","personLastName":"Pupkin","personBirthDate":"1999-05-29","medicalRiskLimitLevel":"LEVEL_10000","selected_risks":["TRAVEL_MEDICAL","TRAVEL_CANCELLATION","TRAVEL_LOSS_BAGGAGE"]}
Hibernate: select classifier0_.id as id1_1_, classifier0_.classifier_id as classifi4_1_, classifier0_.description as descript2_1_, classifier0_.ic as ic3_1_ from classifier_values classifier0_ left outer join classifiers classifier1_ on classifier0_.classifier_id=classifier1_.id where classifier1_.title=? and classifier0_.ic=?
Hibernate: select classifier0_.id as id1_2_0_, classifier0_.description as descript2_2_0_, classifier0_.title as title3_2_0_ from classifiers classifier0_ where classifier0_.id=?
Hibernate: select classifier0_.id as id1_1_, classifier0_.classifier_id as classifi4_1_, classifier0_.description as descript2_1_, classifier0_.ic as ic3_1_ from classifier_values classifier0_ left outer join classifiers classifier1_ on classifier0_.classifier_id=classifier1_.id where classifier1_.title=? and classifier0_.ic=?
Hibernate: select classifier0_.id as id1_1_, classifier0_.classifier_id as classifi4_1_, classifier0_.description as descript2_1_, classifier0_.ic as ic3_1_ from classifier_values classifier0_ left outer join classifiers classifier1_ on classifier0_.classifier_id=classifier1_.id where classifier1_.title=? and classifier0_.ic=?
Hibernate: select classifier0_.id as id1_1_, classifier0_.classifier_id as classifi4_1_, classifier0_.description as descript2_1_, classifier0_.ic as ic3_1_ from classifier_values classifier0_ left outer join classifiers classifier1_ on classifier0_.classifier_id=classifier1_.id where classifier1_.title=? and classifier0_.ic=?
Hibernate: select classifier0_.id as id1_2_0_, classifier0_.description as descript2_2_0_, classifier0_.title as title3_2_0_ from classifiers classifier0_ where classifier0_.id=?
Hibernate: select classifier0_.id as id1_1_, classifier0_.classifier_id as classifi4_1_, classifier0_.description as descript2_1_, classifier0_.ic as ic3_1_ from classifier_values classifier0_ left outer join classifiers classifier1_ on classifier0_.classifier_id=classifier1_.id where classifier1_.title=? and classifier0_.ic=?
Hibernate: select classifier0_.id as id1_2_0_, classifier0_.description as descript2_2_0_, classifier0_.title as title3_2_0_ from classifiers classifier0_ where classifier0_.id=?
Hibernate: select limitlevel0_.id as id1_4_, limitlevel0_.coefficient as coeffici2_4_, limitlevel0_.medical_risk_limit_level_ic as medical_3_4_ from medical_risk_limit_level limitlevel0_ where limitlevel0_.medical_risk_limit_level_ic=?
Hibernate: select agecoeffic0_.id as id1_0_, agecoeffic0_.age_from as age_from2_0_, agecoeffic0_.age_to as age_to3_0_, agecoeffic0_.coefficient as coeffici4_0_ from age_coefficient agecoeffic0_ where ? between agecoeffic0_.age_from and agecoeffic0_.age_to
Hibernate: select countrydef0_.id as id1_3_, countrydef0_.default_day_rate as default_2_3_, countrydef0_.country_ic as country_3_3_ from country_default_day_rate countrydef0_ where countrydef0_.country_ic=?
Hibernate: select limitlevel0_.id as id1_4_, limitlevel0_.coefficient as coeffici2_4_, limitlevel0_.medical_risk_limit_level_ic as medical_3_4_ from medical_risk_limit_level limitlevel0_ where limitlevel0_.medical_risk_limit_level_ic=?
Hibernate: select agecoeffic0_.id as id1_0_, agecoeffic0_.age_from as age_from2_0_, agecoeffic0_.age_to as age_to3_0_, agecoeffic0_.coefficient as coeffici4_0_ from age_coefficient agecoeffic0_ where ? between agecoeffic0_.age_from and agecoeffic0_.age_to
Hibernate: select countrydef0_.id as id1_3_, countrydef0_.default_day_rate as default_2_3_, countrydef0_.country_ic as country_3_3_ from country_default_day_rate countrydef0_ where countrydef0_.country_ic=?
2024-04-04 22:32:47,346 [Test worker] INFO  l.j.t.i.r.l.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":null,"personFirstName":"Vasja","personLastName":"Pupkin","agreementDateFrom":"2024-05-25","agreementDateTo":"2024-05-29","agreementPremium":18.00,"country":"SPAIN","risks":[{"riskIc":"TRAVEL_CANCELLATION","premium":1.00},{"riskIc":"TRAVEL_LOSS_BAGGAGE","premium":6.00},{"riskIc":"TRAVEL_MEDICAL","premium":11.00}],"personBirthDate":"1999-05-29","medicalRiskLimitLevel":"LEVEL_10000"}
2024-04-04 22:32:47,346 [Test worker] INFO  l.j.t.i.r.l.TravelCalculatePremiumRequestExecutionTimeLogger - Request processing time (ms): 186
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
